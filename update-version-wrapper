#!/bin/sh

# This initial setup is essential, so abort if anything fails.
set -e

orig_dir="$(pwd)"
versions_file='shared/versions.yml'

export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa.gpii-ci'
git config --global user.email "gpii-bot@gpii.net"
git config --global user.name "GPII Bot"

# When an existing container is restarted, the sandbox is left behind. Clear it
# out and start over.
rm -rf gpii-infra
# We don't need the full history, but we want a few previous revisions in case
# we need those revisions to push to a remote (e.g. gitlab) that hasn't been
# updated in a bit.
git clone --no-tags --depth 10 git@github.com:gpii-ops/gpii-infra
cd gpii-infra

# Failures in the main loop are ok, so continue if anything fails and try again
# on the next go around.
set +e
while true ; do
    echo "Starting version check at $(date)"
    git fetch --all --depth=10 -p
    git reset --hard origin/master

    "${orig_dir}/update-version" "$(pwd)/${versions_file}"
    if [ -n "$(git status --porcelain -- ${versions_file})" ]; then
        git add "${versions_file}"
        git commit -m"[auto] Update ${versions_file}"
        git push origin HEAD
    fi

    sleep_secs=300
    echo "Finished version check at $(date)"
    echo "Sleeping $sleep_secs..."
    sleep $sleep_secs
done
